%% - clear
clear all;
close all;

%% - setup & load
% add all files to working directory
addpath(genpath('.'));

% load data
data = load('cluster_data');
data = data.cluster_data;

%% Question 1
% Answer: Euclidean Distance (to the power 1/2 is sqrt)

%% Question 2, 3 - Connected Components

% Create maximized figure (for automatic saving image 
% proportions
figure('units','normalized','outerposition',[0 0 1 1]);

[rows, cols] = size(data);
thresholds = [0.05 0.10 0.15 0.20 0.25];
plotidx = 1;
for threshold = thresholds
    subplot(3,2,plotidx);
    hold on;
    plotidx = plotidx + 1;
    for idx1 = 1:rows-1
        dist = pdist2(data(idx1,:),data(idx1+1:rows,:));
        for idx2 = 1:length(dist)
           if dist(idx2) < threshold 
               x1 = data(idx1,1);
               x2 = data(idx1+idx2,1);
               y1 = data(idx1,2);
               y2 = data(idx1+idx2,2);
               plot([x1 x2],[y1 y2],'k'); 
           end
        end    
    end
    scatter(data(:,1),data(:,2),6,'b','filled');
    title(['Threshold: ',num2str(threshold)]);
    xlabel('x-axis');
    ylabel('y-axis');
    hold off;
end
print('-f1','results/threshold_distances','-dpng')

%% Question 4
When the threshold is set to 0.10, there are many 
more than 4 clusters, since all unconnected points are their 
own cluster. Even disregarding single points as clusters, 
there is a small cluster of three points in the center.
However, when the threshold is set to 0.20, there are only 3 
clusters since the 2 leftmost clusters are connected. Therefore, 
out of the given options, the threshold of 0.15 seems best. 
There is a single point in the center which does not belong to 
any of the four classes, making that its own cluster, meaning even
this threshold is suboptimal for clustering the data into four 
clusters exactly. The 'ideal' value for clustering the data into 
four clusters exactly probably lies in between 0.15 and 0.20, given
that it exists.

%% NEW question 5

% Cluster data to divide it into 4 clusters maximum, based on the tree 
% generated by the linkage function
T = clusterdata(data,'MaxClust',4);

% Get number of rows
[nrows, ~] = size(data);

% Scatter plot data, coloring according to cluster number
figure(2);
for i = 1:nrows
    hold on;
    cols = ['g','r','b','k'];
    scatter(data(i,1),data(i,2),cols(T(i))); 
    hold off;
end
title('Data colored by cluster');
xlabel('x-axis');
ylabel('y-axis');

% Save figure
print('-f2','results/colored_clusters','-dpng')
